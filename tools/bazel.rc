# bazelrc file
# https://docs.bazel.build/versions/master/user-manual.html

# bazel >= 0.18 looks for %workspace%/.bazelrc (which redirects here)
# Older bazel versions look for %workspace%/tools/bazel.rc (this file)
# See https://github.com/bazelbuild/bazel/issues/6319

# +------------------------------------------------------------+
# | Startup Options                                            |
# +------------------------------------------------------------+
startup --batch_cpu_scheduling

startup --host_jvm_args=-XX:-UseParallelGC

# +------------------------------------------------------------+
# | Common Configurations for both build and test              |
# +------------------------------------------------------------+

# Common compiling flags.
build --cxxopt="-std=c++17"

# Avoid sandbox.
build --spawn_strategy=local

build --copt="-I/usr/include/python3.6m"

# Code check.
#common --copt="-Werror=sign-compare"
#common --copt="-Werror=return-type"
#common --copt="-Werror=reorder"
#common --copt="-Werror=unused-variable"
#common --copt="-Werror=unused-but-set-variable"
#common --copt="-Werror=switch"

# Specify protobuf cc toolchain
build --proto_toolchain_for_cc="@com_google_protobuf//:cc_toolchain"

build --show_timestamps

# Do not show warnings from external dependencies.
build --output_filter="^//"

# By default prints output only from failed tests.
test --test_output=errors

# +------------------------------------------------------------+
# | CPP Lint Tests & Unit Tests                                |
# +------------------------------------------------------------+
# By default, cpplint tests are run as part of `bazel test` alongside all of
# the other compilation and test targets.  This is a convenience shortcut to
# only do the cpplint testing and nothing else.
# Do bazel test --config=cpplint <target> to enable this configuration.
# To enable the lint test, the BUILD *must* load the cpplint.bzl by having
# 'load("//tools:cpplint.bzl", "cpplint")' at the beginning and 'cpplint()'
# at the end.
test:cpplint --test_tag_filters=cpplint
test:cpplint --build_tests_only

# Regular unit tests.
test:unit_test --test_tag_filters=-cpplint
